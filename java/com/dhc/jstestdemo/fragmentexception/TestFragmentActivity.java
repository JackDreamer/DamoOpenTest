package com.dhc.jstestdemo.fragmentexception;

import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.view.View;
import android.widget.Button;

import com.dhc.jstestdemo.R;
import com.dhc.jstestdemo.launchmodetest.ActivityA;

/**
 * Created by 大漠dreamer on 2019/3/18.
 */

public class TestFragmentActivity extends Activity {


    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_fragment);

        Button btFragment = findViewById(R.id.bt_launch_fragment);
        btFragment.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showFragment();
            }
        });
        Button btActivity = findViewById(R.id.bt_launch_activity);
        btActivity.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(TestFragmentActivity.this, ActivityA.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
            }
        });

    }

    private FragmentManager mFragmentManager = getFragmentManager();
    private FragmentA fragmentA = null;
    FragmentTransaction transaction = null;


    private void showFragment() {

        transaction = mFragmentManager.beginTransaction();

        fragmentA = new FragmentA();

        transaction.replace(R.id.fl_layout, fragmentA);

        transaction.show(fragmentA);

//        transaction.commitAllowingStateLoss();

        hideFragment();

        transaction.commit();


//        transaction.commitAllowingStateLoss();
    }

    /**
     * hind all fragment
     */
    private void hideFragment() {

        transaction.hide(fragmentA);
    }


//    private void showFragment(int position) {
//        if (mMenuList.size() == 0) {
//            return;
//        }
//
//        mCurrentPageIndex = position;
//        sendSwitchBgMessage();
//
//        FragmentTransaction transaction = mFragmentManager.beginTransaction();
//        transaction.setCustomAnimations(R.anim.animation_fragment_into,R.anim.animation_fragment_out);
//        hideFragment(transaction);
//
//        if (mFragmentMap.get(position) == null) {
//            initFragment(position, transaction);
//        } else {
//            transaction.show(mFragmentMap.get(position));
//        }
//        transaction.commitAllowingStateLoss();
//    }
//
//    private void initFragment(int position,FragmentTransaction transaction){
//        StyleBXMFragment tempFragment = null;
//        XMHomeMenu menu = mMenuList.get(position);
//        if (position == 0) {
//            tempFragment = StyleBSearchFragment.newInstance(menu);
//        } else if (position == mMenuList.size() - 1) {
//            tempFragment = StyleBSettingFragment.newInstance(menu);
//        } else if (position == mMenuList.size() - 2) {
//            tempFragment = StyleBUserFragment.newInstance(menu);
//        } else if (menu.type.equalsIgnoreCase(XMediaConst.MENU_TYPE_LIVE)) {
//            tempFragment = StyleBLiveFragment.newInstance(menu);
//            tempFragment.setOnLiveShowListener(mOnLiveShowListener);
//        } else if (menu.type.equalsIgnoreCase(XMediaConst.MENU_TYPE_VOD) && menu.menuName.equalsIgnoreCase("Movies")) {
//            tempFragment = StyleBVodFragment.newInstance(menu);
//        } else {
//            tempFragment = StyleBBaseFragment.newInstance(menu);
//        }
//        tempFragment.setOnPressKeyLeftListener(mOnPressKeyLeftListener);
//        transaction.add(R.id.content_fragment, tempFragment);
//        mFragmentMap.put(position, tempFragment);
//    }
//
//    /**
//     * hind all fragment
//     *
//     * @param transaction
//     */
//    private void hideFragment(FragmentTransaction transaction) {
//        for (int i = 0; i < mMenuList.size(); i++) {
//            Fragment fragment = mFragmentMap.get(i);
//            if ((fragment != null)) {
//                transaction.hide(fragment);
//            }
//        }
}
