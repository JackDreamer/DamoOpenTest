package com.dhc.jstestdemo.eventdispatch;

import android.app.Activity;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.util.Log;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import com.dhc.jstestdemo.R;

import butterknife.BindView;
import butterknife.ButterKnife;

import static android.view.KeyEvent.ACTION_DOWN;
import static android.view.KeyEvent.ACTION_UP;
import static android.view.MotionEvent.ACTION_MOVE;

/**
 * 事件分发机制测试
 * Created by 大漠dreamer on 2019/4/1.
 */

public class EventDispatchActivity extends Activity {

    private static final String TAG = EventDispatchActivity.class.getSimpleName();
    @BindView(R.id.bt_a)
    Button btA;
    @BindView(R.id.bt_b)
    Button btB;
    @BindView(R.id.bt_c)
    Button btC;


    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_event);
        ButterKnife.bind(this);
        initClickEvent();
    }

    private void initClickEvent() {
        btA.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                toast("点击了按钮A");
//                btA.dispatchKeyEvent(e);
            }
        });
        btA.setOnTouchListener(new View.OnTouchListener() {


            @Override
            public boolean onTouch(View v, MotionEvent event) {
                switch (event.getAction()) {
                    case ACTION_DOWN:
                        toast(" btA按下了");
                        Log.d(TAG, "onTouch: btA按下了");
                        break;
                    case ACTION_MOVE:
//                        toast(" btA正在移动");
                        break;
                    case ACTION_UP:
                        toast(" btA用户操作离开屏幕");
                        Log.d(TAG, "onTouch: btA用户操作离开屏幕");
                        break;
                }
                return false;
            }

        });

    }


    private void toast(String name) {
        Toast.makeText(EventDispatchActivity.this, name, Toast.LENGTH_SHORT).show();
    }

    @Override
    public boolean dispatchKeyEvent(KeyEvent event) {

        return true;
    }

    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
//        Log.d(TAG, "Activity执行了 dispatchTouchEvent方法");



        switch (ev.getAction()) {
            case ACTION_DOWN:
                toast("按下了");
                Log.d(TAG, "dispatchTouchEvent: 按下了");
                break;
            case ACTION_MOVE:
//                toast("正在移动");
                break;
            case ACTION_UP:
                toast("用户操作离开屏幕");
                Log.d(TAG, "dispatchTouchEvent: 用户操作离开屏幕");
                break;
        }

        return super.dispatchTouchEvent(ev);
//        return true;
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
//        Log.d(TAG, "Activity执行了  onTouchEvent方法");
        switch (event.getAction()) {
            case ACTION_DOWN:
                toast("Touch按下了");
                Log.d(TAG, "onTouchEvent: Touch按下了");
                break;
            case ACTION_MOVE:
//                toast("Touch正在移动");
                break;
            case ACTION_UP:
                toast("Touch用户操作离开屏幕");
                Log.d(TAG, "onTouchEvent: Touch用户操作离开屏幕");
                break;
        }
//        return true;
        return super.onTouchEvent(event);
    }

}
