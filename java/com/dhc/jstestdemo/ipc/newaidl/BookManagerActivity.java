package com.dhc.jstestdemo.ipc.newaidl;

import android.app.Activity;
import android.app.IntentService;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.RemoteException;
import android.support.annotation.Nullable;
import android.util.Log;

import com.dhc.jstestdemo.R;

import java.util.List;

/**
 * Created by 大漠dreamer on 2019/3/13.
 */

public class BookManagerActivity extends Activity {

    public static final int MSG_NEW_BOOK_ARRIVED = 1;
    private static final String TAG = BookManagerActivity.class.getSimpleName();

    private ILibraryBookManager manager = null;

    public static Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MSG_NEW_BOOK_ARRIVED:
                    Log.d(TAG, "receive new book:" + msg.obj);
                    break;
                default:
                    super.handleMessage(msg);
            }

        }
    };


    private ServiceConnection connection = new ServiceConnection() {
        @Override
        public void onServiceConnected(ComponentName name, IBinder service) {
            ILibraryBookManager manager2 = ILibraryBookManager.Stub.asInterface(service);


            try {
                manager = manager2;
                List<LibraryBook> bookList = manager.getBookList();
                Log.d(TAG, "onServiceConnected: booklist:" + bookList.toString());
                LibraryBook book = new LibraryBook("数据结构", 3);
                manager.addBook(book);
                List<LibraryBook> newList = manager.getBookList();
                Log.d(TAG, "onServiceConnected: newList:" + newList.toString());
                manager.registerNewBookListener(iNewBookArriveListener);
            } catch (RemoteException e) {
                e.printStackTrace();
            }


        }

        @Override
        public void onServiceDisconnected(ComponentName name) {
            manager = null;
            Log.d(TAG, "onServiceDisconnected: died!!");
        }
    };

    private INewBookArriveListener iNewBookArriveListener = new INewBookArriveListener.Stub() {
        @Override
        public void onNewBookArrived(LibraryBook book) throws RemoteException {
            mHandler.obtainMessage(MSG_NEW_BOOK_ARRIVED, book).sendToTarget();
        }
    };

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_a);
        Intent intent = new Intent(this, MyLibraryBookIntentService.class);
        bindService(intent, connection, Context.BIND_AUTO_CREATE);
    }

    @Override
    protected void onDestroy() {

        if (manager != null && manager.asBinder().isBinderAlive()) {
            try {
                manager.unRegisterNewBookListener(iNewBookArriveListener);
            } catch (RemoteException e) {
                e.printStackTrace();
            }
        }

        unbindService(connection);
        super.onDestroy();
    }
}
