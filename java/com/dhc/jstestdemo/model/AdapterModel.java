package com.dhc.jstestdemo.model;

/**
 * 适配器设计模式
 * Created by 大漠dreamer on 2018/11/20.
 */

public class AdapterModel {

    class Source

    {
        public void method1() {
            System.out.print("this is the original method1 in source");
        }
    }

    interface Target {
        void method1();

        void method2();
    }

    class Adapter extends Source implements Target {

        @Override
        public void method2() {
            System.out.print("this is the target method2 in source");
        }
    }

    /**
     * 测试方法，
     *
     * @param args
     */
    public void main(String args) {
        //此处为类的适配器模式
        Target target = new Adapter();
        target.method1();
        target.method2();

        //对象的适配器模式
        Source source = new Source();
        Target target1 = new Wrapper(source);
        target1.method1();
        target1.method2();

    }

    class Wrapper implements Target {

        private Source source;

        public Source getSource() {
            return source;
        }

        public void setSource(Source source) {
            this.source = source;
        }

        public Wrapper(Source source) {
            super();
            this.source = source;
        }

        @Override
        public void method1() {
            source.method1();
        }

        @Override
        public void method2() {
            System.out.print("this is the target method2 in source");
        }
    }

    abstract class Wrapper2 implements Target {

        @Override
        public void method1() {

        }

        @Override
        public void method2() {

        }
    }

    class SourceWrapper21 extends Wrapper2{
        @Override
        public void method1() {
            System.out.print("this is the target method2 in source");
        }
    }
}
