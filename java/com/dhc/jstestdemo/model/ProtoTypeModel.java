package com.dhc.jstestdemo.model;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

/**
 * 原型设计模式
 * Created by 大漠dreamer on 2018/11/20.
 */

public class ProtoTypeModel {

    /**
     * 原型类
     */
    class ProtoType implements Cloneable {
        public Object clone() throws CloneNotSupportedException {
            ProtoType type = (ProtoType) super.clone();
            return type;
        }
    }

    class DeepOrPrototype implements Cloneable, Serializable {

        private final static long serializableUID = 1L;
        private String string;
        private SerializableObject object;

        public String getString() {
            return string;
        }

        public void setString(String string) {
            this.string = string;
        }

        public SerializableObject getObject() {
            return object;
        }

        public void setObject(SerializableObject object) {
            this.object = object;
        }

        //浅复制
        public Object clone() throws CloneNotSupportedException {
            DeepOrPrototype deepOrPrototype = (DeepOrPrototype) super.clone();
            return deepOrPrototype;
        }


        //深复制
        public Object deepClone() throws IOException, ClassNotFoundException {

            //写入当前对象的二进制流
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(bos);
            oos.writeObject(this);

            //读取二进制流产生的新对象
            ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
            ObjectInputStream ois = new ObjectInputStream(bis);
            return ois.readObject();
        }

        class SerializableObject implements Serializable {
            private final static long serializableUID = 1L;
        }
    }
}
